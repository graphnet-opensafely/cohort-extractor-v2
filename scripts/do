#!/usr/bin/env bash
# shellcheck source=../.venv/bin/activate

# This is the base script to call all other commands

set -euo pipefail

command="${1:-help}"
other_args="${*:2}"

echo "Doing $command"

check () {
  echo "Checking black, isort and flake8"
  just check
}

fix () {
  echo "Running black and isort"
  just fix
}

setup () {
  echo "Setting up environment"
  # Implement production setup
}

run () {
  echo "Running..."
  # Implement run for this project
}

update() {
  just update  "$other_args"
}

test_unit() {
  just test-unit "$other_args"
}

test_all() {
  just test-all "$other_args"
}

test_all_fast() {
  just test-all-fast "$other_args"
}

test() {
  test_all
}

help() {
  echo "Usage:"
  echo "    ./scripts/help             prints this help."
  echo "    ./scripts/check            runs the format (black), sort (isort) and lint (flake8) check but does not change any files"
  echo "    ./scripts/fix              fix formatting and import sort ordering."
  echo "    ./scripts/setup            set up production environment."
  echo "    ./scripts/dev_setup        set up/update the local dev env."
  echo "    ./scripts/run              run the dev project."
  echo "    ./scripts/test_unit <args>     run the unit tests only. Optional args are passed to pytest."
  echo "    ./scripts/test_all <args>      run all tests including integration tests in slow mode. Optional args are passed to pytest."
  echo "    ./scripts/test_all_fast <args> run all tests including integration tests in fast mode (not suitable for GHAs). Optional args are passed to pytest."
  echo "    ./scripts/test <args>          alias for test_all. Optional args are passed to pytest."
  echo "    ./scripts/update <target>  compile and update python dependencies.  <target> specifies an environment to update (dev/prod)."
}

"${command}"
