[('Cursor', 'execute', ('select @@version', {}), {}, None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor',
  'fetchone',
  (),
  {},
  ('Microsoft SQL Server 2017 (RTM-CU25) (KB5003830) - 14.0.3401.7 (X64) \n'
   '\tJun 25 2021 14:02:48 \n'
   '\tCopyright (C) 2017 Microsoft Corporation\n'
   '\tDeveloper Edition (64-bit) on Linux (Ubuntu 16.04.7 LTS)',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor', 'execute', ('SELECT schema_name()', {}), {}, None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor', 'fetchone', (), {}, ('dbo',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   '                  SELECT CASE transaction_isolation_level\n'
   '                    WHEN 0 THEN NULL\n'
   "                    WHEN 1 THEN 'READ UNCOMMITTED'\n"
   "                    WHEN 2 THEN 'READ COMMITTED'\n"
   "                    WHEN 3 THEN 'REPEATABLE READ'\n"
   "                    WHEN 4 THEN 'SERIALIZABLE'\n"
   "                    WHEN 5 THEN 'SNAPSHOT' END AS "
   'TRANSACTION_ISOLATION_LEVEL\n'
   '                    FROM sys.dm_exec_sessions\n'
   '                    where session_id = @@SPID\n'
   '                  ',),
  {},
  None),
 ('Cursor', 'fetchone', (), {}, ('READ COMMITTED',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ("SELECT CAST('test max support' AS NVARCHAR(max))", {}),
  {},
  None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor', 'fetchone', (), {}, ('test max support',)),
 ('Cursor', 'close', (), {}, None),
 ('Connection', 'rollback', (), {}, None),
 ('Cursor', 'execute', ('\nDROP TABLE IF EXISTS test_table', {}), {}, None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   'CREATE TABLE test_table (\n'
   '\tpatient_id INTEGER NULL, \n'
   '\tfoo VARCHAR(max) NULL\n'
   ')\n'
   '\n',
   {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 1, 'foo': 'foo1'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 2, 'foo': 'foo2'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 3, 'foo': 'foo3'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 4, 'foo': 'foo4'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 5, 'foo': 'foo5'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 6, 'foo': 'foo6'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 7, 'foo': 'foo7'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 8, 'foo': 'foo8'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 9, 'foo': 'foo9'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 10, 'foo': 'foo10'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 11, 'foo': 'foo11'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO test_table (patient_id, foo) VALUES (%(patient_id)s, %(foo)s)',
   {'patient_id': 12, 'foo': 'foo12'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Connection', 'commit', (), {}, None),
 ('Connection', 'rollback', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #temp_test__pytest123 \n'
   'FROM (SELECT %(param_1)s AS foo) AS anon_1',
   {'param_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'execute', ('\nDROP TABLE #temp_test__pytest123', {}), {}, None),
 ('Cursor', 'description', (), {}, None),
 ('Connection', 'commit', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #temp_4a0aa6f70aa75c3db5476e05267d8ed2 \n'
   'FROM (SELECT * \n'
   'FROM test_table) AS anon_1',
   {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('CREATE INDEX [ix_#temp_4a0aa6f70aa75c3db5476e05267d8ed2_patient_id] ON '
   '#temp_4a0aa6f70aa75c3db5476e05267d8ed2 (patient_id)',
   {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Connection', 'commit', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT TOP 5 * \n'
   'FROM #temp_4a0aa6f70aa75c3db5476e05267d8ed2 ORDER BY patient_id',
   {}),
  {},
  None),
 ('Cursor',
  'description',
  (),
  {},
  (('patient_id', 3, None, None, None, None, None),
   ('foo', 1, None, None, None, None, None))),
 ('Cursor', 'fetchone', (), {}, (1, 'foo1')),
 ('Cursor', 'fetchone', (), {}, (2, 'foo2')),
 ('Cursor', 'fetchone', (), {}, (3, 'foo3')),
 ('Cursor', 'fetchone', (), {}, (4, 'foo4')),
 ('Cursor', 'fetchone', (), {}, (5, 'foo5')),
 ('Cursor', 'fetchone', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT TOP 5 * \n'
   'FROM #temp_4a0aa6f70aa75c3db5476e05267d8ed2 \n'
   'WHERE patient_id > %(patient_id_1)s ORDER BY patient_id',
   {'patient_id_1': 5}),
  {},
  None),
 ('Cursor',
  'description',
  (),
  {},
  (('patient_id', 3, None, None, None, None, None),
   ('foo', 1, None, None, None, None, None))),
 ('Cursor', 'fetchone', (), {}, (6, 'foo6')),
 ('Cursor', 'fetchone', (), {}, (7, 'foo7')),
 ('Cursor', 'fetchone', (), {}, (8, 'foo8')),
 ('Cursor', 'fetchone', (), {}, (9, 'foo9')),
 ('Cursor', 'fetchone', (), {}, (10, 'foo10')),
 ('Cursor', 'fetchone', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT TOP 5 * \n'
   'FROM #temp_4a0aa6f70aa75c3db5476e05267d8ed2 \n'
   'WHERE patient_id > %(patient_id_1)s ORDER BY patient_id',
   {'patient_id_1': 10}),
  {},
  None),
 ('Cursor',
  'description',
  (),
  {},
  (('patient_id', 3, None, None, None, None, None),
   ('foo', 1, None, None, None, None, None))),
 ('Cursor', 'fetchone', (), {}, (11, 'foo11')),
 ('Cursor', 'fetchone', (), {}, (12, 'foo12')),
 ('Cursor', 'fetchone', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\nDROP TABLE IF EXISTS #temp_4a0aa6f70aa75c3db5476e05267d8ed2', {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Connection', 'commit', (), {}, None),
 ('Connection', 'rollback', (), {}, None)]
