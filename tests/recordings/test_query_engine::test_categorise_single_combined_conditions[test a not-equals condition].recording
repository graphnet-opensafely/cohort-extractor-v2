[('Cursor', 'execute', ('select @@version', {}), {}, None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor',
  'fetchone',
  (),
  {},
  ('Microsoft SQL Server 2017 (RTM-CU25) (KB5003830) - 14.0.3401.7 (X64) \n'
   '\tJun 25 2021 14:02:48 \n'
   '\tCopyright (C) 2017 Microsoft Corporation\n'
   '\tDeveloper Edition (64-bit) on Linux (Ubuntu 16.04.7 LTS)',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor', 'execute', ('SELECT schema_name()', {}), {}, None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor', 'fetchone', (), {}, ('dbo',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   '                  SELECT CASE transaction_isolation_level\n'
   '                    WHEN 0 THEN NULL\n'
   "                    WHEN 1 THEN 'READ UNCOMMITTED'\n"
   "                    WHEN 2 THEN 'READ COMMITTED'\n"
   "                    WHEN 3 THEN 'REPEATABLE READ'\n"
   "                    WHEN 4 THEN 'SERIALIZABLE'\n"
   "                    WHEN 5 THEN 'SNAPSHOT' END AS "
   'TRANSACTION_ISOLATION_LEVEL\n'
   '                    FROM sys.dm_exec_sessions\n'
   '                    where session_id = @@SPID\n'
   '                  ',),
  {},
  None),
 ('Cursor', 'fetchone', (), {}, ('READ COMMITTED',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ("SELECT CAST('test max support' AS NVARCHAR(max))", {}),
  {},
  None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor', 'fetchone', (), {}, ('test max support',)),
 ('Cursor', 'close', (), {}, None),
 ('Connection', 'rollback', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_0 \n'
   'FROM (SELECT anon_2.height AS height, anon_2.patient_id AS patient_id \n'
   'FROM (SELECT patients.height AS height, patients.patient_id AS patient_id, '
   'row_number() OVER (PARTITION BY patients.patient_id ORDER BY '
   'patients.patient_id) AS _row_num \n'
   'FROM (SELECT [Height] AS height, [DateOfBirth] AS date_of_birth, '
   '[PatientId] AS patient_id \n'
   'FROM patients) AS patients) AS anon_2 \n'
   'WHERE anon_2._row_num = %(row_num_1)s) AS anon_1',
   {'row_num_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_1 \n'
   'FROM (SELECT practice_registrations.patient_id AS patient_id, %(param_1)s '
   'AS patient_id_exists \n'
   'FROM (SELECT [StpId] AS stp, [StartDate] AS date_start, [EndDate] AS '
   'date_end, [PatientId] AS patient_id \n'
   'FROM practice_registrations) AS practice_registrations GROUP BY '
   'practice_registrations.patient_id) AS anon_1',
   {'param_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT [#group_table_1].patient_id AS patient_id, CASE WHEN '
   '([#group_table_0].height > %(height_1)s AND [#group_table_0].height != '
   '%(height_2)s) THEN %(param_1)s WHEN ([#group_table_0].height <= '
   '%(height_3)s) THEN %(param_2)s ELSE %(param_3)s END AS height_group \n'
   'FROM [#group_table_1] LEFT OUTER JOIN [#group_table_0] ON '
   '[#group_table_1].patient_id = [#group_table_0].patient_id \n'
   'WHERE [#group_table_1].patient_id_exists = 1',
   {'height_1': 175,
    'height_2': 180,
    'param_1': 'tallish',
    'height_3': 175,
    'param_2': 'short',
    'param_3': 'missing'}),
  {},
  None),
 ('Cursor',
  'description',
  (),
  {},
  (('patient_id', 3, None, None, None, None, None),
   ('height_group', 1, None, None, None, None, None))),
 ('Cursor', 'fetchone', (), {}, (1, 'missing')),
 ('Cursor', 'fetchone', (), {}, (2, 'tallish')),
 ('Cursor', 'fetchone', (), {}, (3, 'missing')),
 ('Cursor', 'fetchone', (), {}, (4, 'short')),
 ('Cursor', 'fetchone', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Connection', 'rollback', (), {}, None)]
