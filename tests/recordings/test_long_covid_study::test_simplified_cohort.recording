[('Cursor', 'execute', ('select @@version', {}), {}, None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor',
  'fetchone',
  (),
  {},
  ('Microsoft SQL Server 2017 (RTM-CU25) (KB5003830) - 14.0.3401.7 (X64) \n'
   '\tJun 25 2021 14:02:48 \n'
   '\tCopyright (C) 2017 Microsoft Corporation\n'
   '\tDeveloper Edition (64-bit) on Linux (Ubuntu 16.04.7 LTS)',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor', 'execute', ('SELECT schema_name()', {}), {}, None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor', 'fetchone', (), {}, ('dbo',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   '                  SELECT CASE transaction_isolation_level\n'
   '                    WHEN 0 THEN NULL\n'
   "                    WHEN 1 THEN 'READ UNCOMMITTED'\n"
   "                    WHEN 2 THEN 'READ COMMITTED'\n"
   "                    WHEN 3 THEN 'REPEATABLE READ'\n"
   "                    WHEN 4 THEN 'SERIALIZABLE'\n"
   "                    WHEN 5 THEN 'SNAPSHOT' END AS "
   'TRANSACTION_ISOLATION_LEVEL\n'
   '                    FROM sys.dm_exec_sessions\n'
   '                    where session_id = @@SPID\n'
   '                  ',),
  {},
  None),
 ('Cursor', 'fetchone', (), {}, ('READ COMMITTED',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ("SELECT CAST('test max support' AS NVARCHAR(max))", {}),
  {},
  None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor', 'fetchone', (), {}, ('test max support',)),
 ('Cursor', 'close', (), {}, None),
 ('Connection', 'rollback', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   'CREATE TABLE [#codelist_0] (\n'
   '\tcode VARCHAR(5) COLLATE Latin1_General_BIN NOT NULL\n'
   ')\n'
   '\n'
   '\n'
   '\n'
   '\n'
   "INSERT INTO [#codelist_0] (code) VALUES ('A795.'), ('A7y00'), ('AyuDC'), "
   "('X73lE'), ('X73lF'), ('Y20fa'), ('Y20fa'), ('Y210b'), ('Y211c'), "
   "('Y228e'), ('Y229c'), ('Y22a4'), ('Y22a5'), ('Y22aa'), ('Y246c')\n"
   '\n'
   '\n'
   'SELECT * INTO #group_table_0 FROM (\n'
   'SELECT practice_registrations.patient_id, 1 AS patient_id_exists \n'
   'FROM (SELECT StartDate AS date_start, EndDate AS date_end, Patient_ID AS '
   'patient_id \n'
   'FROM [RegistrationHistory]) AS practice_registrations \n'
   "WHERE practice_registrations.date_start <= N'2020-11-01' AND "
   "practice_registrations.date_end >= N'2020-11-01' GROUP BY "
   'practice_registrations.patient_id\n'
   ') t\n'
   '\n'
   '\n'
   'SELECT * INTO #group_table_1 FROM (\n'
   'SELECT anon_1.date, anon_1.patient_id \n'
   'FROM (SELECT sgss_sars_cov_2.date, sgss_sars_cov_2.patient_id, '
   'row_number() OVER (PARTITION BY sgss_sars_cov_2.patient_id ORDER BY '
   'sgss_sars_cov_2.date) AS _row_num \n'
   'FROM (\n'
   '            SELECT Patient_ID as patient_id, Specimen_Date AS date, 1 AS '
   'positive_result FROM SGSS_AllTests_Positive\n'
   '            UNION ALL\n'
   '            SELECT Patient_ID as patient_id, Specimen_Date AS date, 0 AS '
   'positive_result FROM SGSS_AllTests_Negative\n'
   '        ) AS sgss_sars_cov_2 \n'
   'WHERE sgss_sars_cov_2.positive_result = 1) AS anon_1 \n'
   'WHERE anon_1._row_num = 1\n'
   ') t\n'
   '\n'
   '\n'
   'SELECT * INTO #group_table_2 FROM (\n'
   'SELECT anon_1.date, anon_1.patient_id \n'
   'FROM (SELECT clinical_events.date AS date, clinical_events.patient_id AS '
   'patient_id, row_number() OVER (PARTITION BY clinical_events.patient_id '
   'ORDER BY clinical_events.date) AS _row_num \n'
   'FROM (SELECT CTV3Code AS code, ConsultationDate AS date, Patient_ID AS '
   'patient_id \n'
   'FROM [CodedEvent]) AS clinical_events \n'
   'WHERE clinical_events.code IN (SELECT [#codelist_0].code \n'
   'FROM [#codelist_0])) AS anon_1 \n'
   'WHERE anon_1._row_num = 1\n'
   ') t\n'
   '\n'
   '\n'
   'SELECT * INTO #group_table_3 FROM (\n'
   'SELECT patients.patient_id, patients.sex \n'
   'FROM (SELECT Sex AS sex, DateOfBirth AS date_of_birth, Patient_ID AS '
   'patient_id \n'
   'FROM [Patient]) AS patients\n'
   ') t\n'
   '\n'
   '\n'
   'SELECT [#group_table_0].patient_id AS patient_id, [#group_table_1].date AS '
   'sgss_first_positive_test_date, [#group_table_2].date AS '
   'primary_care_covid_first_date, [#group_table_3].sex AS sex \n'
   'FROM [#group_table_0] LEFT OUTER JOIN [#group_table_1] ON '
   '[#group_table_0].patient_id = [#group_table_1].patient_id LEFT OUTER JOIN '
   '[#group_table_2] ON [#group_table_0].patient_id = '
   '[#group_table_2].patient_id LEFT OUTER JOIN [#group_table_3] ON '
   '[#group_table_0].patient_id = [#group_table_3].patient_id \n'
   'WHERE [#group_table_0].patient_id_exists = 1',
   {}),
  {},
  None),
 ('Cursor',
  'description',
  (),
  {},
  (('patient_id', 3, None, None, None, None, None),
   ('sgss_first_positive_test_date', 2, None, None, None, None, None),
   ('primary_care_covid_first_date', 4, None, None, None, None, None),
   ('sex', 1, None, None, None, None, None))),
 ('Cursor',
  'fetchone',
  (),
  {},
  (1, datetime.date(2020, 5, 5), datetime.datetime(2020, 7, 7, 0, 0), 'F')),
 ('Cursor', 'fetchone', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Connection', 'rollback', (), {}, None)]
