[('Cursor', 'execute', ('select @@version', {}), {}, None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor',
  'fetchone',
  (),
  {},
  ('Microsoft SQL Server 2017 (RTM-CU25) (KB5003830) - 14.0.3401.7 (X64) \n'
   '\tJun 25 2021 14:02:48 \n'
   '\tCopyright (C) 2017 Microsoft Corporation\n'
   '\tDeveloper Edition (64-bit) on Linux (Ubuntu 16.04.7 LTS)',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor', 'execute', ('SELECT schema_name()', {}), {}, None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor', 'fetchone', (), {}, ('dbo',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   '                  SELECT CASE transaction_isolation_level\n'
   '                    WHEN 0 THEN NULL\n'
   "                    WHEN 1 THEN 'READ UNCOMMITTED'\n"
   "                    WHEN 2 THEN 'READ COMMITTED'\n"
   "                    WHEN 3 THEN 'REPEATABLE READ'\n"
   "                    WHEN 4 THEN 'SERIALIZABLE'\n"
   "                    WHEN 5 THEN 'SNAPSHOT' END AS "
   'TRANSACTION_ISOLATION_LEVEL\n'
   '                    FROM sys.dm_exec_sessions\n'
   '                    where session_id = @@SPID\n'
   '                  ',),
  {},
  None),
 ('Cursor', 'fetchone', (), {}, ('READ COMMITTED',)),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ("SELECT CAST('test max support' AS NVARCHAR(max))", {}),
  {},
  None),
 ('Cursor', 'description', (), {}, (('', 1, None, None, None, None, None),)),
 ('Cursor', 'fetchone', (), {}, ('test max support',)),
 ('Cursor', 'close', (), {}, None),
 ('Connection', 'rollback', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   'CREATE TABLE [#codelist_0] (\n'
   '\tcode VARCHAR(5) COLLATE Latin1_General_BIN NOT NULL, \n'
   '\tsystem VARCHAR(6) NOT NULL\n'
   ')\n'
   '\n',
   {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO [#codelist_0] (code, system) VALUES (%(code_m0)s, '
   '%(system_m0)s), (%(code_m1)s, %(system_m1)s), (%(code_m2)s, '
   '%(system_m2)s), (%(code_m3)s, %(system_m3)s), (%(code_m4)s, '
   '%(system_m4)s), (%(code_m5)s, %(system_m5)s), (%(code_m6)s, '
   '%(system_m6)s), (%(code_m7)s, %(system_m7)s), (%(code_m8)s, '
   '%(system_m8)s), (%(code_m9)s, %(system_m9)s), (%(code_m10)s, '
   '%(system_m10)s), (%(code_m11)s, %(system_m11)s), (%(code_m12)s, '
   '%(system_m12)s), (%(code_m13)s, %(system_m13)s), (%(code_m14)s, '
   '%(system_m14)s)',
   {'code_m0': 'A795.',
    'system_m0': 'ctv3',
    'code_m1': 'A7y00',
    'system_m1': 'ctv3',
    'code_m2': 'AyuDC',
    'system_m2': 'ctv3',
    'code_m3': 'X73lE',
    'system_m3': 'ctv3',
    'code_m4': 'X73lF',
    'system_m4': 'ctv3',
    'code_m5': 'Y20fa',
    'system_m5': 'ctv3',
    'code_m6': 'Y20fa',
    'system_m6': 'ctv3',
    'code_m7': 'Y210b',
    'system_m7': 'ctv3',
    'code_m8': 'Y211c',
    'system_m8': 'ctv3',
    'code_m9': 'Y228e',
    'system_m9': 'ctv3',
    'code_m10': 'Y229c',
    'system_m10': 'ctv3',
    'code_m11': 'Y22a4',
    'system_m11': 'ctv3',
    'code_m12': 'Y22a5',
    'system_m12': 'ctv3',
    'code_m13': 'Y22aa',
    'system_m13': 'ctv3',
    'code_m14': 'Y246c',
    'system_m14': 'ctv3'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 15),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   'CREATE TABLE [#codelist_1] (\n'
   '\tcode VARCHAR(4) COLLATE Latin1_General_BIN NOT NULL, \n'
   '\tsystem VARCHAR(6) NOT NULL\n'
   ')\n'
   '\n',
   {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO [#codelist_1] (code, system) VALUES (%(code_m0)s, '
   '%(system_m0)s), (%(code_m1)s, %(system_m1)s)',
   {'code_m0': 'U071',
    'system_m0': 'icd10',
    'code_m1': 'U072',
    'system_m1': 'icd10'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 2),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   'CREATE TABLE [#codelist_2] (\n'
   '\tcode VARCHAR(16) COLLATE Latin1_General_BIN NOT NULL, \n'
   '\tsystem VARCHAR(6) NOT NULL\n'
   ')\n'
   '\n',
   {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO [#codelist_2] (code, system) VALUES (%(code_m0)s, '
   '%(system_m0)s), (%(code_m1)s, %(system_m1)s)',
   {'code_m0': '1325161000000102',
    'system_m0': 'snomed',
    'code_m1': '1325181000000106',
    'system_m1': 'snomed'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 2),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   'CREATE TABLE [#codelist_3] (\n'
   '\tcode VARCHAR(16) COLLATE Latin1_General_BIN NOT NULL, \n'
   '\tsystem VARCHAR(6) NOT NULL\n'
   ')\n'
   '\n',
   {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO [#codelist_3] (code, system) VALUES (%(code_m0)s, '
   '%(system_m0)s)',
   {'code_m0': '1325161000000102', 'system_m0': 'snomed'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('\n'
   'CREATE TABLE [#codelist_4] (\n'
   '\tcode VARCHAR(16) COLLATE Latin1_General_BIN NOT NULL, \n'
   '\tsystem VARCHAR(6) NOT NULL\n'
   ')\n'
   '\n',
   {}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('INSERT INTO [#codelist_4] (code, system) VALUES (%(code_m0)s, '
   '%(system_m0)s)',
   {'code_m0': '1325181000000106', 'system_m0': 'snomed'}),
  {},
  None),
 ('Cursor', 'rowcount', (), {}, 1),
 ('Cursor', 'description', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_0 \n'
   'FROM (SELECT practice_registrations.patient_id AS patient_id, %(param_1)s '
   'AS patient_id_exists \n'
   'FROM (\n'
   '            SELECT RegistrationHistory.Patient_ID AS patient_id,\n'
   '                RegistrationHistory.StartDate AS date_start,\n'
   '                RegistrationHistory.EndDate AS date_end,\n'
   '                Organisation.Organisation_ID AS pseudo_id,\n'
   '                Organisation.Region as nuts1_region_name\n'
   '            FROM RegistrationHistory\n'
   '            LEFT OUTER JOIN Organisation ON '
   'RegistrationHistory.Organisation_ID = Organisation.Organisation_ID\n'
   '        ) AS practice_registrations \n'
   'WHERE practice_registrations.date_start <= %(date_start_1)s AND '
   'practice_registrations.date_end >= %(date_end_1)s GROUP BY '
   'practice_registrations.patient_id) AS anon_1',
   {'param_1': 1,
    'date_start_1': '2020-11-01T00:00:00',
    'date_end_1': '2020-11-01T00:00:00'}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_1 \n'
   'FROM (SELECT anon_2.date AS date, anon_2.patient_id AS patient_id \n'
   'FROM (SELECT sgss_sars_cov_2.date AS date, sgss_sars_cov_2.patient_id AS '
   'patient_id, row_number() OVER (PARTITION BY sgss_sars_cov_2.patient_id '
   'ORDER BY sgss_sars_cov_2.date) AS _row_num \n'
   'FROM (\n'
   '            SELECT Patient_ID as patient_id, Specimen_Date AS date, 1 AS '
   'positive_result FROM SGSS_AllTests_Positive\n'
   '            UNION ALL\n'
   '            SELECT Patient_ID as patient_id, Specimen_Date AS date, 0 AS '
   'positive_result FROM SGSS_AllTests_Negative\n'
   '        ) AS sgss_sars_cov_2 \n'
   'WHERE sgss_sars_cov_2.positive_result = 1) AS anon_2 \n'
   'WHERE anon_2._row_num = %(row_num_1)s) AS anon_1',
   {'row_num_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_2 \n'
   'FROM (SELECT anon_2.date AS date, anon_2.patient_id AS patient_id \n'
   'FROM (SELECT clinical_events.date AS date, clinical_events.patient_id AS '
   'patient_id, row_number() OVER (PARTITION BY clinical_events.patient_id '
   'ORDER BY clinical_events.date) AS _row_num \n'
   'FROM (\n'
   "            SELECT Patient_ID as patient_id, CTV3Code as code, 'ctv3' as "
   'system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent\n'
   '            UNION ALL\n'
   "            SELECT Patient_ID as patient_id, ConceptID as code, 'snomed' "
   'as system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent_SNOMED\n'
   '        ) AS clinical_events \n'
   'WHERE clinical_events.code IN (SELECT [#codelist_0].code \n'
   'FROM [#codelist_0] \n'
   'WHERE clinical_events.system = %(system_1)s)) AS anon_2 \n'
   'WHERE anon_2._row_num = %(row_num_1)s) AS anon_1',
   {'system_1': 'ctv3', 'row_num_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_3 \n'
   'FROM (SELECT anon_2.date AS date, anon_2.patient_id AS patient_id \n'
   'FROM (SELECT hospitalizations.date AS date, hospitalizations.patient_id AS '
   'patient_id, row_number() OVER (PARTITION BY hospitalizations.patient_id '
   'ORDER BY hospitalizations.date) AS _row_num \n'
   'FROM (\n'
   '            SELECT Patient_ID as patient_id, Admission_Date as date, \n'
   '        REVERSE(\n'
   '            SUBSTRING(\n'
   '                REVERSE(fully_split.Value),\n'
   '                PATINDEX(\n'
   "                    '%[^X]%',\n"
   '                    REVERSE(fully_split.Value)\n'
   '                ),\n'
   "                LEN(fully_split.Value) - PATINDEX('%[^X]%', "
   'REVERSE(fully_split.Value)) + 1\n'
   '            )\n'
   '        )\n'
   "     as code, 'icd10' as system\n"
   '            FROM APCS\n'
   '            -- Our string_split() implementation only works as long as the '
   "codelists do not contain '<', '>' or '&'\n"
   '            -- characters. If that assumption is broken then this will '
   'fail unpredictably.\n'
   '            CROSS APPLY \n'
   '        (\n'
   "            SELECT Value = y.i.value('(./text())[1]', 'nvarchar(4000)')\n"
   '            FROM\n'
   '            (\n'
   '                SELECT x = CONVERT(\n'
   '                    XML,\n'
   "                    '<i>' + REPLACE(Der_Diagnosis_All, ' ||', '</i><i>') + "
   "'</i>'\n"
   "                ).query('.')\n"
   "            ) AS t CROSS APPLY x.nodes('i') AS y(i)\n"
   '        )\n'
   '     pipe_split\n'
   '            CROSS APPLY \n'
   '        (\n'
   "            SELECT Value = y.i.value('(./text())[1]', 'nvarchar(4000)')\n"
   '            FROM\n'
   '            (\n'
   '                SELECT x = CONVERT(\n'
   '                    XML,\n'
   "                    '<i>' + REPLACE(pipe_split.Value, ' ,', '</i><i>') + "
   "'</i>'\n"
   "                ).query('.')\n"
   "            ) AS t CROSS APPLY x.nodes('i') AS y(i)\n"
   '        )\n'
   '     fully_split\n'
   '        ) AS hospitalizations \n'
   'WHERE hospitalizations.code IN (SELECT [#codelist_1].code \n'
   'FROM [#codelist_1] \n'
   'WHERE hospitalizations.system = %(system_1)s)) AS anon_2 \n'
   'WHERE anon_2._row_num = %(row_num_1)s) AS anon_1',
   {'system_1': 'icd10', 'row_num_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_4 \n'
   'FROM (SELECT clinical_events.patient_id AS patient_id, %(param_1)s AS '
   'patient_id_exists \n'
   'FROM (\n'
   "            SELECT Patient_ID as patient_id, CTV3Code as code, 'ctv3' as "
   'system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent\n'
   '            UNION ALL\n'
   "            SELECT Patient_ID as patient_id, ConceptID as code, 'snomed' "
   'as system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent_SNOMED\n'
   '        ) AS clinical_events \n'
   'WHERE clinical_events.code IN (SELECT [#codelist_2].code \n'
   'FROM [#codelist_2] \n'
   'WHERE clinical_events.system = %(system_1)s) GROUP BY '
   'clinical_events.patient_id) AS anon_1',
   {'param_1': 1, 'system_1': 'snomed'}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_5 \n'
   'FROM (SELECT anon_2.date AS date, anon_2.patient_id AS patient_id \n'
   'FROM (SELECT clinical_events.date AS date, clinical_events.patient_id AS '
   'patient_id, row_number() OVER (PARTITION BY clinical_events.patient_id '
   'ORDER BY clinical_events.date) AS _row_num \n'
   'FROM (\n'
   "            SELECT Patient_ID as patient_id, CTV3Code as code, 'ctv3' as "
   'system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent\n'
   '            UNION ALL\n'
   "            SELECT Patient_ID as patient_id, ConceptID as code, 'snomed' "
   'as system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent_SNOMED\n'
   '        ) AS clinical_events \n'
   'WHERE clinical_events.code IN (SELECT [#codelist_2].code \n'
   'FROM [#codelist_2] \n'
   'WHERE clinical_events.system = %(system_1)s)) AS anon_2 \n'
   'WHERE anon_2._row_num = %(row_num_1)s) AS anon_1',
   {'system_1': 'snomed', 'row_num_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_6 \n'
   'FROM (SELECT anon_2.date_of_birth AS date_of_birth, anon_2.patient_id AS '
   'patient_id \n'
   'FROM (SELECT patients.date_of_birth AS date_of_birth, patients.patient_id '
   'AS patient_id, row_number() OVER (PARTITION BY patients.patient_id ORDER '
   'BY patients.patient_id) AS _row_num \n'
   'FROM (SELECT [Sex] AS sex, [DateOfBirth] AS date_of_birth, [Patient_ID] AS '
   'patient_id \n'
   'FROM [Patient]) AS patients) AS anon_2 \n'
   'WHERE anon_2._row_num = %(row_num_1)s) AS anon_1',
   {'row_num_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_7 \n'
   'FROM (SELECT anon_2.patient_id AS patient_id, anon_2.sex AS sex \n'
   'FROM (SELECT patients.patient_id AS patient_id, patients.sex AS sex, '
   'row_number() OVER (PARTITION BY patients.patient_id ORDER BY '
   'patients.patient_id) AS _row_num \n'
   'FROM (SELECT [Sex] AS sex, [DateOfBirth] AS date_of_birth, [Patient_ID] AS '
   'patient_id \n'
   'FROM [Patient]) AS patients) AS anon_2 \n'
   'WHERE anon_2._row_num = %(row_num_1)s) AS anon_1',
   {'row_num_1': 1}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_8 \n'
   'FROM (SELECT clinical_events.patient_id AS patient_id, '
   'count(clinical_events.code) AS code_count \n'
   'FROM (\n'
   "            SELECT Patient_ID as patient_id, CTV3Code as code, 'ctv3' as "
   'system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent\n'
   '            UNION ALL\n'
   "            SELECT Patient_ID as patient_id, ConceptID as code, 'snomed' "
   'as system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent_SNOMED\n'
   '        ) AS clinical_events \n'
   'WHERE clinical_events.code IN (SELECT [#codelist_3].code \n'
   'FROM [#codelist_3] \n'
   'WHERE clinical_events.system = %(system_1)s) AND clinical_events.date >= '
   '%(date_1)s GROUP BY clinical_events.patient_id) AS anon_1',
   {'system_1': 'snomed', 'date_1': '2020-02-01T00:00:00'}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT * INTO #group_table_9 \n'
   'FROM (SELECT clinical_events.patient_id AS patient_id, '
   'count(clinical_events.code) AS code_count \n'
   'FROM (\n'
   "            SELECT Patient_ID as patient_id, CTV3Code as code, 'ctv3' as "
   'system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent\n'
   '            UNION ALL\n'
   "            SELECT Patient_ID as patient_id, ConceptID as code, 'snomed' "
   'as system, ConsultationDate AS date, NumericValue AS numeric_value FROM '
   'CodedEvent_SNOMED\n'
   '        ) AS clinical_events \n'
   'WHERE clinical_events.code IN (SELECT [#codelist_4].code \n'
   'FROM [#codelist_4] \n'
   'WHERE clinical_events.system = %(system_1)s) AND clinical_events.date >= '
   '%(date_1)s GROUP BY clinical_events.patient_id) AS anon_1',
   {'system_1': 'snomed', 'date_1': '2020-02-01T00:00:00'}),
  {},
  None),
 ('Cursor', 'description', (), {}, None),
 ('Cursor',
  'execute',
  ('SELECT [#group_table_0].patient_id AS patient_id, [#group_table_1].date AS '
   'sgss_first_positive_test_date, [#group_table_2].date AS '
   'primary_care_covid_first_date, [#group_table_3].date AS '
   'hospital_covid_first_date, [#group_table_4].patient_id_exists AS '
   'long_covid, [#group_table_5].date AS first_long_covid_date, CASE WHEN '
   '(CASE WHEN (dateadd(year, datediff(year, [#group_table_6].date_of_birth, '
   '%(param_1)s), [#group_table_6].date_of_birth) > %(param_1)s) THEN '
   'datediff(year, [#group_table_6].date_of_birth, %(param_1)s) - '
   '%(datediff_1)s ELSE datediff(year, [#group_table_6].date_of_birth, '
   '%(param_1)s) END < %(param_2)s) THEN %(param_3)s WHEN (CASE WHEN '
   '(dateadd(year, datediff(year, [#group_table_6].date_of_birth, '
   '%(param_4)s), [#group_table_6].date_of_birth) > %(param_4)s) THEN '
   'datediff(year, [#group_table_6].date_of_birth, %(param_4)s) - '
   '%(datediff_2)s ELSE datediff(year, [#group_table_6].date_of_birth, '
   '%(param_4)s) END >= %(param_5)s AND CASE WHEN (dateadd(year, '
   'datediff(year, [#group_table_6].date_of_birth, %(param_6)s), '
   '[#group_table_6].date_of_birth) > %(param_6)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_6)s) - %(datediff_3)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_6)s) END < '
   '%(param_7)s) THEN %(param_8)s WHEN (CASE WHEN (dateadd(year, '
   'datediff(year, [#group_table_6].date_of_birth, %(param_9)s), '
   '[#group_table_6].date_of_birth) > %(param_9)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_9)s) - %(datediff_4)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_9)s) END >= '
   '%(param_10)s AND CASE WHEN (dateadd(year, datediff(year, '
   '[#group_table_6].date_of_birth, %(param_11)s), '
   '[#group_table_6].date_of_birth) > %(param_11)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_11)s) - %(datediff_5)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_11)s) END < '
   '%(param_12)s) THEN %(param_13)s WHEN (CASE WHEN (dateadd(year, '
   'datediff(year, [#group_table_6].date_of_birth, %(param_14)s), '
   '[#group_table_6].date_of_birth) > %(param_14)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_14)s) - %(datediff_6)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_14)s) END >= '
   '%(param_15)s AND CASE WHEN (dateadd(year, datediff(year, '
   '[#group_table_6].date_of_birth, %(param_16)s), '
   '[#group_table_6].date_of_birth) > %(param_16)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_16)s) - %(datediff_7)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_16)s) END < '
   '%(param_17)s) THEN %(param_18)s WHEN (CASE WHEN (dateadd(year, '
   'datediff(year, [#group_table_6].date_of_birth, %(param_19)s), '
   '[#group_table_6].date_of_birth) > %(param_19)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_19)s) - %(datediff_8)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_19)s) END >= '
   '%(param_20)s AND CASE WHEN (dateadd(year, datediff(year, '
   '[#group_table_6].date_of_birth, %(param_21)s), '
   '[#group_table_6].date_of_birth) > %(param_21)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_21)s) - %(datediff_9)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_21)s) END < '
   '%(param_22)s) THEN %(param_23)s WHEN (CASE WHEN (dateadd(year, '
   'datediff(year, [#group_table_6].date_of_birth, %(param_24)s), '
   '[#group_table_6].date_of_birth) > %(param_24)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_24)s) - %(datediff_10)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_24)s) END >= '
   '%(param_25)s AND CASE WHEN (dateadd(year, datediff(year, '
   '[#group_table_6].date_of_birth, %(param_26)s), '
   '[#group_table_6].date_of_birth) > %(param_26)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_26)s) - %(datediff_11)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_26)s) END < '
   '%(param_27)s) THEN %(param_28)s WHEN (CASE WHEN (dateadd(year, '
   'datediff(year, [#group_table_6].date_of_birth, %(param_29)s), '
   '[#group_table_6].date_of_birth) > %(param_29)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_29)s) - %(datediff_12)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_29)s) END >= '
   '%(param_30)s AND CASE WHEN (dateadd(year, datediff(year, '
   '[#group_table_6].date_of_birth, %(param_31)s), '
   '[#group_table_6].date_of_birth) > %(param_31)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_31)s) - %(datediff_13)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_31)s) END < '
   '%(param_32)s) THEN %(param_33)s WHEN (CASE WHEN (dateadd(year, '
   'datediff(year, [#group_table_6].date_of_birth, %(param_34)s), '
   '[#group_table_6].date_of_birth) > %(param_34)s) THEN datediff(year, '
   '[#group_table_6].date_of_birth, %(param_34)s) - %(datediff_14)s ELSE '
   'datediff(year, [#group_table_6].date_of_birth, %(param_34)s) END >= '
   '%(param_35)s) THEN %(param_36)s ELSE %(param_37)s END AS age_group, '
   '[#group_table_7].sex AS sex, [#group_table_8].code_count AS '
   'snomed_1325161000000102, [#group_table_9].code_count AS '
   'snomed_1325181000000106 \n'
   'FROM [#group_table_0] LEFT OUTER JOIN [#group_table_1] ON '
   '[#group_table_0].patient_id = [#group_table_1].patient_id LEFT OUTER JOIN '
   '[#group_table_2] ON [#group_table_0].patient_id = '
   '[#group_table_2].patient_id LEFT OUTER JOIN [#group_table_3] ON '
   '[#group_table_0].patient_id = [#group_table_3].patient_id LEFT OUTER JOIN '
   '[#group_table_4] ON [#group_table_0].patient_id = '
   '[#group_table_4].patient_id LEFT OUTER JOIN [#group_table_5] ON '
   '[#group_table_0].patient_id = [#group_table_5].patient_id LEFT OUTER JOIN '
   '[#group_table_6] ON [#group_table_0].patient_id = '
   '[#group_table_6].patient_id LEFT OUTER JOIN [#group_table_7] ON '
   '[#group_table_0].patient_id = [#group_table_7].patient_id LEFT OUTER JOIN '
   '[#group_table_8] ON [#group_table_0].patient_id = '
   '[#group_table_8].patient_id LEFT OUTER JOIN [#group_table_9] ON '
   '[#group_table_0].patient_id = [#group_table_9].patient_id \n'
   'WHERE [#group_table_0].patient_id_exists = 1',
   {'param_1': '20201101',
    'datediff_1': 1,
    'param_2': 18,
    'param_3': '0-17',
    'param_4': '20201101',
    'datediff_2': 1,
    'param_5': 18,
    'param_6': '20201101',
    'datediff_3': 1,
    'param_7': 25,
    'param_8': '18-24',
    'param_9': '20201101',
    'datediff_4': 1,
    'param_10': 25,
    'param_11': '20201101',
    'datediff_5': 1,
    'param_12': 35,
    'param_13': '25-34',
    'param_14': '20201101',
    'datediff_6': 1,
    'param_15': 35,
    'param_16': '20201101',
    'datediff_7': 1,
    'param_17': 45,
    'param_18': '35-44',
    'param_19': '20201101',
    'datediff_8': 1,
    'param_20': 45,
    'param_21': '20201101',
    'datediff_9': 1,
    'param_22': 55,
    'param_23': '45-54',
    'param_24': '20201101',
    'datediff_10': 1,
    'param_25': 55,
    'param_26': '20201101',
    'datediff_11': 1,
    'param_27': 70,
    'param_28': '55-69',
    'param_29': '20201101',
    'datediff_12': 1,
    'param_30': 70,
    'param_31': '20201101',
    'datediff_13': 1,
    'param_32': 80,
    'param_33': '70-79',
    'param_34': '20201101',
    'datediff_14': 1,
    'param_35': 80,
    'param_36': '80+',
    'param_37': 'missing'}),
  {},
  None),
 ('Cursor',
  'description',
  (),
  {},
  (('patient_id', 3, None, None, None, None, None),
   ('sgss_first_positive_test_date', 2, None, None, None, None, None),
   ('primary_care_covid_first_date', 4, None, None, None, None, None),
   ('hospital_covid_first_date', 2, None, None, None, None, None),
   ('long_covid', 3, None, None, None, None, None),
   ('first_long_covid_date', 4, None, None, None, None, None),
   ('age_group', 1, None, None, None, None, None),
   ('sex', 1, None, None, None, None, None),
   ('snomed_1325161000000102', 3, None, None, None, None, None),
   ('snomed_1325181000000106', 3, None, None, None, None, None))),
 ('Cursor',
  'fetchone',
  (),
  {},
  (1,
   datetime.date(2020, 5, 5),
   datetime.datetime(2020, 7, 7, 0, 0),
   datetime.date(2020, 8, 8),
   1,
   datetime.datetime(2020, 9, 9, 0, 0),
   '25-34',
   'F',
   2,
   None)),
 ('Cursor', 'fetchone', (), {}, None),
 ('Cursor', 'close', (), {}, None),
 ('Connection', 'rollback', (), {}, None)]
